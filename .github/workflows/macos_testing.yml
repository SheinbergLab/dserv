name: macos testing

on: [push]

jobs:

  build-macos:

    runs-on: macos-14

    steps:

      - name: Install cmake build tool and tcl9.0 dependency.
        run: |
          brew update
          brew install cmake tcl-tk@9

      - name: Check out our code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build and install jansson static lib.
        run: |
          cd deps/jansson/
          cmake -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -B build
          cmake --build build
          sudo cmake --install build

      - name: Set up a keychain for code signing.
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
          APP_CERTIFICATE_BASE64: ${{ secrets.APPLE_APP_CERTIFICATE_BASE64 }}
          INSTALLER_CERTIFICATE_BASE64: ${{ secrets.APPLE_INSTALLER_CERTIFICATE_BASE64 }}
        run: |
          # Reconstitute text-encoded secrets as binary .p12 files.
          APP_CERTIFICATE_PATH=$RUNNER_TEMP/developerID_application.p12
          echo -n "$APP_CERTIFICATE_BASE64" | base64 --decode -o $APP_CERTIFICATE_PATH
          INSTALLER_CERTIFICATE_PATH=$RUNNER_TEMP/developerID_installer.p12
          echo -n "$INSTALLER_CERTIFICATE_BASE64" | base64 --decode -o $INSTALLER_CERTIFICATE_PATH

          # Create a new keychain for use in CI.
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

          # Add our certificates to the keychain.
          security import $APP_CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          security import $INSTALLER_CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"

          # Alow codesign util and the current user to use this keychain for signing.
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Log info about this keychain for debuging.
          security find-identity -p basic -v

      - name: Build, sign, package, and notarize dserv.
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          INSTALLLER_CERT_ID: ${{ secrets.APPLE_INSTALLLER_CERT_ID }}
        run: |
          cmake -B build -G Xcode -DCMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM="$TEAM_ID"
          cmake --build build --config Release
          cpack -G productbuild --config build/CPackConfig.cmake
          productsign --sign "$INSTALLLER_CERT_ID" dserv-1.3-Darwin.pkg dserv-1.3-Darwin-signed.pkg

          xcrun notarytool store-credentials --apple-id "$APPLE_ID" --team-id "$TEAM_ID" --password "$APPLE_APP_PASSWORD" "dserv-signing"
          xcrun notarytool submit dserv-1.3-Darwin-signed.pkg --keychain-profile "dserv-signing" --wait
          xcrun stapler staple dserv-1.3-Darwin-signed.pkg

      - name: Upload package for testing.
        uses: actions/upload-artifact@v4
        with:
          name: dserv-1.3-Darwin-signed.pkg
          path: dserv-1.3-Darwin-signed.pkg
          retention-days: 7

      - name: Sanity check installing the package.
        run: |
          sudo mkdir /usr/local/dlsh
          cd /usr/local/dlsh
          wget https://github.com/SheinbergLab/dlsh/releases/download/0.9.3/dlsh.zip

          sudo installer -pkg dserv-1.3-Darwin-signed.pkg -target /
          /usr/local/dserv/dserv --help
          /usr/local/dserv/dserv --cscript scripts/tcl/test_logger.tcl
